
TODO:
 - do further routing tests. Test tree.go. Wildcards.
 - regex validation of segments. Multiple segments per node.
 - Analyze gorilla/mux. See what other typs of conditions I can extract.
   - host. schemes. headers. query params.
 - trailing slash policy
 
 - readme
 
 - audit exported structures (appResponseWriter, for instance)
 - write tests for router_setup
 - refactor tests to use assertResponse
 
 - benchmarks:
   - 404 benchmark -- fn(# routes)
   - 500 benchmark
   - regex benchmarks (when that feature exists)

 - ??? Unsure thoughts
   - Wrap the request with some stuff that gives you a nice view of the params
   - helpers to render JSON
   - helpers to do JSON crud
   - suffix capture (eg, /suggestions.:format)
   - static file server:
     - slow: StaticMiddleware("public"), because all requests check filesystem
     - But, most things aren't naked in public. They're in image, js, css. Or they're the favicon, or robots.txt
     - StaticMiddleware("public", "favicon.ico", "robots.txt", "images", "javascripts", "stylesheets")
     - If you go ahead and list root segments and files, then we can skip checking most requests

   








